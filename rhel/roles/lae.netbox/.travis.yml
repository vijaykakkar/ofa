language: python
python:
  - "2.7"
  - "3.6"
sudo: required
dist: trusty
cache:
  directories: [ '$HOME/lxc' ]
  pip: true
services:
- postgresql
addons:
  postgresql: "9.4"
env:
- ANSIBLE_GIT_VERSION='devel' # 2.9.x development branch
- ANSIBLE_VERSION='<2.9.0' # 2.8.x
matrix:
  fast_finish: true
install:
- if [ "$ANSIBLE_GIT_VERSION" ]; then pip install "https://github.com/ansible/ansible/archive/${ANSIBLE_GIT_VERSION}.tar.gz";
  else pip install "ansible${ANSIBLE_VERSION}"; fi;
  pip install --pre ansible-lint
- ansible --version
- ansible-galaxy install lae.travis-lxc
- ansible-playbook tests/install.yml -i tests/inventory
- git archive --format tar.gz HEAD > lae.netbox.tar.gz && ansible-galaxy install
  lae.netbox.tar.gz,$(git rev-parse HEAD),lae.netbox && rm lae.netbox.tar.gz
before_script:
- echo "host all all 10.0.3.0/24 trust" | sudo tee -a /etc/postgresql/9.4/main/pg_hba.conf
- echo "listen_addresses = '*'" | sudo tee -a /etc/postgresql/9.4/main/postgresql.conf
- sudo service postgresql restart
- sudo redis-server /etc/redis/redis.conf --bind 10.0.3.1 --protected-mode no --port 6379
- cd tests/
script:
- ansible-lint ../ || true
- ansible-playbook -i inventory deploy.yml --syntax-check
- ansible-playbook -i inventory deploy.yml
- 'ANSIBLE_STDOUT_CALLBACK=debug ANSIBLE_DISPLAY_SKIPPED_HOSTS=no ANSIBLE_DISPLAY_OK_HOSTS=no
  unbuffer ansible-playbook -vvi inventory deploy.yml &>play.log; printf "Idempotence: ";
  grep -A1 "PLAY RECAP" play.log | grep -qP "changed=0 .*failed=0 .*"
  && (echo "PASS"; exit 0) || (echo "FAIL"; cat play.log; exit 1)'
- ANSIBLE_STDOUT_CALLBACK=debug ansible-playbook -i inventory -v test.yml
notifications:
  webhooks:
    urls:
      - https://galaxy.ansible.com/api/v1/notifications/
      - https://t2d.idolactiviti.es/notify
