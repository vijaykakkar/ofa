---
- name: AWS ec2 de-provisioning
  connection: local
  hosts: localhost
  gather_facts: false
  collections:
    - amazon.aws
  # The paramater region will be set for all ec2 modules by specifying it here under module_defaults
  module_defaults:
    group/aws:
      region: "{{ your_region | default('ca-central-1') }}"
  vars:
    instance_name:
    owner_tag: "AnsibleRoot"

  tasks:
    - name: grab facts for TEST_INSTANCE
      ec2_instance_info:
        filters:
          "tag:Name": "{{ instance_name }}"
      register: TEST_INSTANCE

    - name: destroy EC2 instances
      ec2:
        state: absent
        instance_ids: "{{ TEST_INSTANCE.instances | map(attribute='instance_id') | list }}"
      register: result
      when:
        - TEST_INSTANCE.instances is defined
        - TEST_INSTANCE.instances

    - name: Get the VPC ID
      ec2_vpc_net_info:
        filters:
          "tag:Name": "aws-demo-vpc"
      register: vpc_net_facts

    - name: Deleted EC2 security group for  aws-demo-vpc
      ec2_group:
        name: "aws-demo-sg"
        vpc_id: "{{ vpc_net_facts.vpcs[0].id }}"
        state: absent
      register: delete_sg
      until: delete_sg is not failed
      retries: 50
      delegate_to: localhost
      run_once: true
      when: vpc_net_facts.vpcs|length > 0

    - name: Delete subnet for aws-demo-vpc
      ec2_vpc_subnet:
        vpc_id: "{{ vpc_net_facts.vpcs[0].id }}"
        cidr: "192.168.0.0/28"
        state: absent
      delegate_to: localhost
      run_once: true
      when: vpc_net_facts.vpcs|length > 0

    - name: vpc internet gateway is deleted for aws-demo-vpc
      ec2_vpc_igw:
        vpc_id: "{{vpc_net_facts.vpcs[0].id}}"
        state: absent
      delegate_to: localhost
      run_once: true
      when: vpc_net_facts.vpcs|length > 0

    - name: grab route information for aws-demo-vpc
      ec2_vpc_route_table_info:
        filters:
          vpc-id: "{{ vpc_net_facts.vpcs[0].id }}"
      register: route_table_facts
      delegate_to: localhost
      run_once: true
      when: vpc_net_facts.vpcs|length > 0

    - name: vpc public subnet route table is deleted
      ec2_vpc_route_table:
        state: absent
        vpc_id: "{{ vpc_net_facts.vpcs[0].id }}"
        route_table_id: "{{ item.id }}"
        lookup: id
      loop: "{{ route_table_facts.route_tables }}"
      when:
        - vpc_net_facts.vpcs|length > 0
        - item.associations == []
        
    - name: Delete AWS VPC aws-demo-vpc
      ec2_vpc_net:
        name: "aws-demo-vpc"
        cidr_block: "192.168.0.0/24"
        state: absent
      register: delete_vpc
      until: delete_vpc is not failed
      retries: 50
      delegate_to: localhost
      run_once: true
      when: vpc_net_facts.vpcs|length > 0

    - name: remove ssh key pair
      ec2_key:
        name: "aws-demo-key"
        state: absent
      register: create_key
